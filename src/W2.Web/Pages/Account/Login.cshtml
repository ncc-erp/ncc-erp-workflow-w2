@page
@using Microsoft.AspNetCore.Hosting
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Hosting
@using Volo.Abp.Account.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using W2.Localization
@using W2.Web.Pages.Account
@inject IHtmlLocalizer<AccountResource> L
@inject IThemeManager ThemeManager
@inject IWebHostEnvironment HostingEnvironment
@inject IHtmlLocalizer<W2Resource> W2L

@model CustomLoginModel

@{
    var a = Model;
    Layout = ThemeManager.CurrentTheme.GetLayout(StandardLayouts.Account);
}

<div class="card mt-3 shadow-sm rounded">
    <div class="card-body p-5">
        <h4 class="text-center">@W2L["Login"]</h4>
        @if (Model.EnableLocalLogin)
        {
            <form method="post" class="mt-4">
                <div class="mb-3">
                    <label asp-for="LoginInput.UserNameOrEmailAddress" class="form-label"></label>
                    <input asp-for="LoginInput.UserNameOrEmailAddress" class="form-control"/>
                    <span asp-validation-for="LoginInput.UserNameOrEmailAddress" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="LoginInput.Password" class="form-label"></label>
                    <input asp-for="LoginInput.Password" class="form-control"/>
                    <span asp-validation-for="LoginInput.Password" class="text-danger"></span>
                </div>
                <abp-row>
                    <abp-column>
                        <abp-input asp-for="LoginInput.RememberMe" class="mb-4"/>
                    </abp-column>
                    <abp-column class="text-end">
                        <a href="@Url.Page("./ForgotPassword", new {returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash})">@L["ForgotPassword"]</a>
                    </abp-column>
                </abp-row>
                <div class="d-grid gap-2">
                    <abp-button type="submit" button-type="Primary" name="Action" value="Login" class="btn-lg mt-3">@L["Login"]</abp-button>
                    @if (Model.ShowCancelButton)
                    {
                        <abp-button type="submit" button-type="Secondary" formnovalidate="formnovalidate" name="Action" value="Cancel" class="btn-lg mt-3">@L["Cancel"]</abp-button>
                    }
                </div>
            </form>
        }
        @if (Model.VisibleExternalProviders.Any())
        {
            <form asp-page="./Login" asp-page-handler="ExternalLogin"
                  asp-route-returnUrl="@Model.ReturnUrl" asp-route-returnUrlHash="@Model.ReturnUrlHash"
                  method="post">
                @foreach (var provider in Model.VisibleExternalProviders)
                {
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-outline-primary btn-lg mt-4" name="provider"
                            value="@provider.AuthenticationScheme" title="@L["LogInUsingYourProviderAccount", provider.DisplayName]">
                            <img src="~/images/google-logo.png" />
                            Login with @provider.DisplayName
                        </button>
                    </div>
                }
            </form>
        }

        @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
        {
            <div class="alert alert-warning">
                <strong>@L["InvalidLoginRequest"]</strong>
                @L["ThereAreNoLoginSchemesConfiguredForThisClient"]
            </div>
        }

    </div>
</div>